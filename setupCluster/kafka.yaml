# LOGER

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: event-display
  namespace: default
spec:
  template:
    spec:
      containers:
        - # This corresponds to
          # https://github.com/knative/eventing/tree/main/cmd/event_display/main.go
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/event_display

---

# KAFKA

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: knative-demo-topic
  namespace: kafka
  labels:
    strimzi.io/cluster: my-cluster
spec:
  partitions: 3
  replicas: 1
  config:
    retention.ms: 7200000
    segment.bytes: 1073741824

---

apiVersion: sources.knative.dev/v1beta1
kind: KafkaSource
metadata:
  name: kafka-source
spec:
  consumerGroup: knative-group
  bootstrapServers:
    - my-cluster-kafka-bootstrap.kafka:9092
  consumers: 12    # Number of replicas
  topics:
    - knative-demo-topic
  sink:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Broker
      name: broker1

---

# EVENTING

apiVersion: eventing.knative.dev/v1
kind: Broker
metadata:
  annotations:
    eventing.knative.dev/broker.class: MTChannelBasedBroker
  name: broker1
spec:
  # Configuration specific to this broker.
  config:
    apiVersion: v1
    kind: ConfigMap
    name: my-broker-specific-configuration
    namespace: default

---


apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: triger1
spec:
  broker: broker1
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: event-display

# todo jak polaczona jest ta aplikacja? gdzie sie dzieje scaling do zera? jak podbic liczbe replic dla servisu knative
# sdn - data plane - leca eventy/ controle plane -> routowanie eventow jakies proste, mikro agenciki odpychja/przyciagaja eventy

# todo:
# expose kafki na external events
# filtering na trigerach:
#   1. log
#   2. forward msg
# sending messages to other clusters
# switch to MQTT and K3S than use K3D